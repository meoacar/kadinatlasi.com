<?php

namespace App\Filament\Resources;

use App\Filament\Resources\PremiumSubscriptionResource\Pages;
use App\Models\PremiumSubscription;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;

class PremiumSubscriptionResource extends Resource
{
    protected static ?string $model = PremiumSubscription::class;
    protected static ?string $navigationIcon = 'heroicon-o-star';
    protected static ?string $navigationLabel = 'Premium Üyelikler';
    protected static ?string $modelLabel = 'Premium Üyelik';
    protected static ?string $pluralModelLabel = 'Premium Üyelikler';
    protected static ?string $navigationGroup = 'Gelir Yönetimi';
    protected static ?int $navigationSort = 2;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\Select::make('user_id')
                    ->label('Kullanıcı')
                    ->relationship('user', 'name')
                    ->searchable()
                    ->required(),
                Forms\Components\Select::make('plan_type')
                    ->label('Plan Tipi')
                    ->options([
                        'basic' => 'Temel (₺29/ay)',
                        'premium' => 'Premium (₺59/ay)',
                        'vip' => 'VIP (₺99/ay)'
                    ])
                    ->required(),
                Forms\Components\TextInput::make('price')
                    ->label('Fiyat (₺)')
                    ->numeric()
                    ->required(),
                Forms\Components\DatePicker::make('start_date')
                    ->label('Başlangıç Tarihi')
                    ->required(),
                Forms\Components\DatePicker::make('end_date')
                    ->label('Bitiş Tarihi')
                    ->required(),
                Forms\Components\Select::make('status')
                    ->label('Durum')
                    ->options([
                        'pending' => 'Beklemede',
                        'active' => 'Aktif',
                        'expired' => 'Süresi Dolmuş',
                        'cancelled' => 'İptal Edilmiş'
                    ])
                    ->required(),
                Forms\Components\TextInput::make('payment_method')
                    ->label('Ödeme Yöntemi')
                    ->required(),
                Forms\Components\TagsInput::make('features')
                    ->label('Özellikler')
                    ->placeholder('Özellik ekleyin...')
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('user.name')
                    ->label('Kullanıcı')
                    ->searchable(),
                Tables\Columns\TextColumn::make('plan_type')
                    ->label('Plan')
                    ->badge()
                    ->color(fn (string $state): string => match ($state) {
                        'basic' => 'gray',
                        'premium' => 'warning',
                        'vip' => 'success',
                    }),
                Tables\Columns\TextColumn::make('price')
                    ->label('Fiyat')
                    ->money('TRY'),
                Tables\Columns\TextColumn::make('status')
                    ->label('Durum')
                    ->badge()
                    ->color(fn (string $state): string => match ($state) {
                        'pending' => 'warning',
                        'active' => 'success',
                        'expired' => 'danger',
                        'cancelled' => 'gray',
                    }),
                Tables\Columns\TextColumn::make('start_date')
                    ->label('Başlangıç')
                    ->date(),
                Tables\Columns\TextColumn::make('end_date')
                    ->label('Bitiş')
                    ->date(),
            ])
            ->filters([
                Tables\Filters\SelectFilter::make('plan_type')
                    ->label('Plan Tipi')
                    ->options([
                        'basic' => 'Temel',
                        'premium' => 'Premium',
                        'vip' => 'VIP'
                    ]),
                Tables\Filters\SelectFilter::make('status')
                    ->label('Durum')
                    ->options([
                        'pending' => 'Beklemede',
                        'active' => 'Aktif',
                        'expired' => 'Süresi Dolmuş',
                        'cancelled' => 'İptal Edilmiş'
                    ]),
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ->defaultSort('created_at', 'desc');
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListPremiumSubscriptions::route('/'),
            'create' => Pages\CreatePremiumSubscription::route('/create'),
            'edit' => Pages\EditPremiumSubscription::route('/{record}/edit'),
        ];
    }

    public static function getNavigationBadge(): ?string
    {
        return static::getModel()::where('status', 'active')->count();
    }
}